<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="io.airbyte.integrations.source.postgres.PostgresCdcGetPublicizedTablesTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2023-05-20T13:44:36" hostname="MacBook-Pro-3" time="9.757">
  <properties/>
  <testcase name="testGetPublicizedTables()" classname="io.airbyte.integrations.source.postgres.PostgresCdcGetPublicizedTablesTest" time="9.757"/>
  <system-out><![CDATA[{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.u.ImageNameSubstitutor(instance):55 Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.d.DockerClientProviderStrategy(lambda$loadConfiguredStrategy$9):362 Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.d.DockerClientProviderStrategy(tryOutStrategy):272 Found Docker environment with local Unix socket (unix:///var/run/docker.sock)"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.DockerClientFactory(client):198 Docker host IP address is localhost"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.DockerClientFactory(client):205 Connected to docker: \n  Server Version: 20.10.12\n  API Version: 1.41\n  Operating System: Docker Desktop\n  Total Memory: 1985 MB"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.c.GenericContainer(tryStart):376 Creating container for image: testcontainers/ryuk:0.3.4"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.c.GenericContainer(tryStart):440 Container testcontainers/ryuk:0.3.4 is starting: 52ceb8685f4c727dde7b92d0fc0c588d61a6fdfda4527c61b7dea8d256bb5941"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.c.GenericContainer(tryStart):520 Container testcontainers/ryuk:0.3.4 started in PT9.430014S"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.u.RyukResourceReaper(init):43 Ryuk started - will monitor and terminate Testcontainers containers on JVM exit"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.DockerClientFactory(client):235 Checking the system..."}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.DockerClientFactory(check):256 ✔︎ Docker server version should be at least 1.6.0"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.c.GenericContainer(tryStart):376 Creating container for image: debezium/postgres:13-alpine"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.c.GenericContainer(tryStart):440 Container debezium/postgres:13-alpine is starting: f94ae76fb275cbe5e490f744535e1e4c358b61c561af1583ac656ef1561c9668"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.t.c.GenericContainer(tryStart):520 Container debezium/postgres:13-alpine started in PT29.198431S"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO c.z.h.HikariDataSource(<init>):80 HikariPool-1 - Starting..."}}
{"type":"LOG","log":{"level":"INFO","message":"INFO c.z.h.HikariDataSource(<init>):82 HikariPool-1 - Start completed."}}
{"type":"LOG","log":{"level":"INFO","message":"INFO o.j.t.JooqLogger(info):312 \n                                      \n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@  @@        @@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@\n@@@@@@@@@@@@@@@@  @@  @@    @@@@@@@@@@\n@@@@@@@@@@  @@@@  @@  @@    @@@@@@@@@@\n@@@@@@@@@@        @@        @@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@        @@        @@@@@@@@@@\n@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@\n@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@\n@@@@@@@@@@        @@  @  @  @@@@@@@@@@\n@@@@@@@@@@        @@        @@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Thank you for using jOOQ 3.13.4\n                                      "}}
{"type":"LOG","log":{"level":"INFO","message":"INFO c.z.h.HikariDataSource(<init>):80 HikariPool-2 - Starting..."}}
{"type":"LOG","log":{"level":"INFO","message":"INFO c.z.h.HikariDataSource(<init>):82 HikariPool-2 - Start completed."}}
{"type":"LOG","log":{"level":"INFO","message":"INFO i.a.i.s.p.PostgresUtils(isCdc):53 using CDC: false"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO i.a.i.s.p.PostgresUtils(isCdc):53 using CDC: true"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO i.a.d.j.DefaultJdbcDatabase(lambda$unsafeQuery$1):115 closing connection"}}
{"type":"LOG","log":{"level":"INFO","message":"INFO i.a.i.s.p.PostgresCdcCatalogHelper(getPublicizedTables):119 For CDC, only tables in publication publication_test_12 will be included in the sync: [public.table_1, public.table_2]"}}
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
